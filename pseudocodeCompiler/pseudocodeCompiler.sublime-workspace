{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"normal",
				"normaliseExpression"
			],
			[
				"pars",
				"parsePSC"
			],
			[
				"norma",
				"normaliseAst"
			],
			[
				"int",
				"interfiles"
			],
			[
				"len",
				"length\t(AstTransform.hs)"
			],
			[
				"checkR",
				"checkReturnStatement"
			],
			[
				"chec",
				"checkRetunStatement"
			],
			[
				"che",
				"checkRetunStatement"
			],
			[
				"ser",
				"serializeExpression"
			],
			[
				"Instr",
				"InstrBlockLeave"
			],
			[
				"InstrB",
				"InstrBlockEnter"
			],
			[
				"seri",
				"serializeStatement"
			],
			[
				"InstB",
				"InstrBlockLeave"
			],
			[
				"put",
				"putWord8"
			],
			[
				"InstrObj",
				"InstrObjMemberAccess"
			],
			[
				"InstrLog",
				"InstrLogicOr\t(Instructions.hs)"
			],
			[
				"InstrCLe",
				"InstrCompareLeq\t(Instructions.hs)"
			],
			[
				"InstrComp",
				"InstrCompareLt\t(Instructions.hs)"
			],
			[
				"InstrF",
				"InstrFunctionCall\t(Instructions.hs)"
			],
			[
				"toB",
				"toByecode"
			],
			[
				"norm",
				"normaliseAst"
			],
			[
				"toy",
				"toBytes"
			],
			[
				"no",
				"normaliseExpression"
			],
			[
				"normaliseSt",
				"normaliseStatement"
			],
			[
				"Instrp",
				"InstrPushConstStr"
			],
			[
				"ExpressionLo",
				"ExpressionLogicNot"
			],
			[
				"ExpressionCom",
				"ExpressionCompareNeq\t(PseudocodeParser.y)"
			],
			[
				"ar",
				"argstolist"
			],
			[
				"Expressionl",
				"ExpressionLogicNot\t(PseudocodeParser.y)"
			],
			[
				"ExressionLog",
				"ExpressionLogicAnd\t(PseudocodeParser.y)"
			],
			[
				"Expr",
				"Expression"
			],
			[
				"ExpressionCm",
				"ExpressionCompareNeq\t(Ast.hs)"
			],
			[
				"TokenC",
				"TokenComma\t(Tokens.hs)"
			],
			[
				"Stat",
				"StatementWhile"
			],
			[
				"Cont",
				"ContstantInt\t(Ast.hs)"
			],
			[
				"TokenCb",
				"TokenCBClose\t(PseudocodeParser.y)"
			],
			[
				"ExprCo",
				"ExprCollection\t(Ast.hs)"
			],
			[
				"ToknCB",
				"TokenCBClose\t(Tokens.hs)"
			],
			[
				"TokenEq",
				"TokenEqualSign\t(PseudocodeParser.y)"
			],
			[
				"Exp",
				"ExpConst"
			],
			[
				"St",
				"Statement"
			],
			[
				"Empt",
				"EmptyStatement"
			],
			[
				"Statem",
				"StatementBlock"
			],
			[
				"ST",
				"StatementBlock"
			],
			[
				"get",
				"getCurrentBlock"
			],
			[
				"start",
				"startsWith"
			],
			[
				"Epm",
				"EmptyBlock"
			],
			[
				"name",
				"nameStore_get"
			],
			[
				"exe",
				"execStack_pop"
			],
			[
				"variableString_s",
				"variableString_setContents\t(variableString.c)"
			],
			[
				"exec",
				"execStack_push"
			],
			[
				"execS",
				"execStack_pop"
			],
			[
				"OP",
				"OPCOMMONEND"
			],
			[
				"O",
				"OPCOMMONSTART"
			],
			[
				"OPM",
				"OPCOMMONEND"
			],
			[
				"OPCOMM",
				"OPCOMMONSTART"
			],
			[
				"variableStrign_get",
				"variableString_getBytes\t(main.c)"
			],
			[
				"con",
				"continue"
			],
			[
				"variab",
				"variableFunction"
			],
			[
				"arg",
				"argnames"
			],
			[
				"entr",
				"entryPoint"
			],
			[
				"vari",
				"variable_new\t(class.c)"
			],
			[
				"byt",
				"bytefrom"
			],
			[
				"__var",
				"__variableString_unicode_pos_translate"
			],
			[
				"__variab",
				"__variableString_unicode_pos_translate"
			],
			[
				"vrai",
				"variableString_new"
			],
			[
				"ref",
				"refcount"
			],
			[
				"variableString_get",
				"variableString_getBytes\t(object.c)"
			],
			[
				"VARI",
				"VARIABLE_TYPE_STRING"
			],
			[
				"VAR",
				"VARIABLESTRING_FLAGS_COW"
			],
			[
				"V",
				"VARIABLE_TYPE_STRING"
			],
			[
				"ent",
				"entrycount"
			],
			[
				"ojb",
				"objvar"
			],
			[
				"var",
				"variable_new\t(class.c)"
			],
			[
				"e",
				"entrycount\t(class.c)"
			],
			[
				"ty",
				"type\tunsigned char type"
			],
			[
				"by",
				"bytecount"
			],
			[
				"b",
				"bytecount"
			],
			[
				"variableString_uni",
				"__variableString_unicodeUnitLength"
			],
			[
				"__v",
				"__variableString_unicode_pos_translate"
			],
			[
				"variable",
				"variableString"
			],
			[
				"variabl",
				"variableString"
			],
			[
				"VA",
				"VARIABLE_TYPE_STRING"
			],
			[
				"VARIAB",
				"VARIABLESTRING_FLAGS_COW"
			],
			[
				"nameStor",
				"nameStore_node"
			],
			[
				"words",
				"wordsWithMostOccurencesOfChars"
			],
			[
				"pa",
				"palindromeAndUmlaut\t(PalindromeCounter.java)"
			],
			[
				"Pal",
				"PalindromeCounter\t(PalindromeCounter.java)"
			],
			[
				"Stri",
				"StringCounter"
			],
			[
				"Str",
				"StringCounter"
			],
			[
				"c",
				"c"
			],
			[
				"pare",
				"parseFormel"
			],
			[
				"drop",
				"dropSpaces"
			],
			[
				"drp",
				"dropSpaces"
			],
			[
				"dr",
				"dropSpaces"
			],
			[
				"proc",
				"processHaxeTags"
			],
			[
				"process",
				"processIncludeTags"
			],
			[
				"if",
				"ife\tif-else (ife)"
			],
			[
				"subs",
				"substring(...)\tString"
			],
			[
				"getHxm",
				"getHxtmlCode"
			],
			[
				"getH",
				"getHxtmlString"
			],
			[
				"hed",
				"header"
			],
			[
				"subset",
				"\\subseteq                                         \tlatex-mathsymbols"
			],
			[
				"sect",
				"\\section*{title}                                  \tlatex-document"
			],
			[
				"par",
				"parseHxtml"
			],
			[
				"hax",
				"haxecode"
			],
			[
				"ht",
				"htmlEscape(...)\tString"
			],
			[
				"h",
				"htmlEscape(...)\tString"
			],
			[
				"subst",
				"substring(...)\tString"
			],
			[
				"Fi",
				"FileSystem\tclass"
			],
			[
				"req",
				"requestedURL"
			],
			[
				"pr",
				"print( v : Dynamic )\tVoid"
			],
			[
				"getCl",
				"getClientIP(  )\tString"
			],
			[
				"prt",
				"println( v : Dynamic )\tVoid"
			],
			[
				"l",
				"Lib\tclass"
			],
			[
				"Ped",
				"Pedestrian"
			],
			[
				"ab",
				"abstract"
			],
			[
				"T",
				"TwoWheeler\t(TwoWheeler.java)"
			],
			[
				"ass",
				"assistantCount"
			],
			[
				"asi",
				"assistantCount"
			],
			[
				"as",
				"assistantCount"
			],
			[
				"statementL",
				"statementLVCStore"
			],
			[
				"statementLv",
				"statementLVCLookup"
			],
			[
				"el",
				"elif\telse if"
			],
			[
				"read",
				"readIn"
			],
			[
				"in",
				"index"
			],
			[
				"format",
				"formatAsString"
			],
			[
				"_",
				"_SESSION"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/Main.hs",
			"settings":
			{
				"buffer_size": 1777,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/ToBytecode.hs",
			"settings":
			{
				"buffer_size": 2148,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/AstTransform.hs",
			"settings":
			{
				"buffer_size": 6819,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Ast.hs",
			"settings":
			{
				"buffer_size": 1844,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/Java/JavaC.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Haskell/Haskell.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/Haskell/Haskell.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Java/Ant.sublime-build",
					""
				],
				[
					"Packages/Java/JavaC.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/Java/JavaC.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					""
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Traditional"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"PdfLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"XeLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"LuaLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Basic Builder"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Basic Builder - PdfLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Basic Builder - XeLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Basic Builder - LuaLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Script Builder"
				]
			],
			[
				"Packages/LaTeXTools/LaTeX.sublime-build",
				"XeLaTeX"
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 240.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"meun",
				"View: Toggle Menu"
			],
			[
				"space",
				"Indentation: Convert to Spaces"
			],
			[
				"menu",
				"View: Toggle Menu"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"inde",
				"Indentation: Reindent Lines"
			],
			[
				"proje",
				"Project: Close"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"setting",
				"EasyClangComplete: Settings"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"easyc",
				"EasyClangComplete: Settings"
			],
			[
				"eas",
				"EasyClangComplete: Settings"
			],
			[
				"edit",
				"Project: Edit Project"
			],
			[
				"sav",
				"Project: Save As"
			],
			[
				"refr",
				"Project: Refresh Folders"
			],
			[
				"inded",
				"Indentation: Reindent Lines"
			],
			[
				"men",
				"View: Toggle Menu"
			],
			[
				"latex",
				"LaTeXTools: Reset user settings to default"
			],
			[
				"add",
				"Project: Add Folder"
			],
			[
				"packagRes",
				"PackageResourceViewer: Open Resource"
			],
			[
				"brow",
				"Preferences: Browse Packages"
			],
			[
				"pref",
				"Preferences: Settings"
			],
			[
				"pack",
				"PackageResourceViewer: Open Resource"
			],
			[
				"packageR",
				"PackageResourceViewer: Open Resource"
			],
			[
				"bra",
				"Bracketeer: Indent Text"
			],
			[
				"ad",
				"Project: Add Folder"
			],
			[
				"m",
				"View: Toggle Menu"
			],
			[
				"a",
				"Project: Add Folder"
			],
			[
				"view",
				"File: New View into File"
			],
			[
				"sort",
				"Sort Lines"
			],
			[
				"man",
				"Snippet: main()"
			],
			[
				"ind",
				"Indentation: Reindent Lines"
			],
			[
				"idn",
				"Indentation: Reindent Lines"
			],
			[
				"enc",
				"HTML: Encode Special Characters"
			],
			[
				"make",
				"Build With: Make"
			],
			[
				"package ",
				"Package Control: List Packages"
			],
			[
				"me",
				"View: Toggle Menu"
			],
			[
				"vie",
				"View: Toggle Menu"
			],
			[
				"proj",
				"Project: Close"
			],
			[
				"fol",
				"File: Close All"
			],
			[
				"pra",
				"Project: Save As"
			],
			[
				"r",
				"Project: Refresh Folders"
			],
			[
				"re",
				"Project: Refresh Folders"
			],
			[
				"pr",
				"Project: Add Folder"
			],
			[
				"v",
				"View: Toggle Menu"
			],
			[
				"folder",
				"Project: Refresh Folders"
			],
			[
				"pro",
				"Project: Add Folder"
			],
			[
				"vem",
				"View: Toggle Menu"
			],
			[
				"ref",
				"Project: Refresh Folders"
			],
			[
				"vme",
				"View: Toggle Menu"
			],
			[
				"",
				"Package Control: Install Package"
			]
		],
		"width": 493.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"exit",
			"q",
			"ls"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/felix/programming/haskell/pseudocodeCompiler",
		"/home/felix/programming/haskell/pseudocodeCompiler/src"
	],
	"file_history":
	[
		"/home/felix/programming/haskell/pseudocodeCompiler/src/ToBytecode.hs",
		"/home/felix/programming/haskell/pseudocodeCompiler/pseudocodeCompiler.cabal",
		"/home/felix/programming/haskell/pseudocodeCompiler/src/AstTransform.hs",
		"/home/felix/programming/haskell/pseudocodeCompiler/src/Ast.hs",
		"/home/felix/programming/haskell/pseudocodeCompiler/file.psbc",
		"/home/felix/programming/haskell/pseudocodeCompiler/ToBytecode.hs",
		"/home/felix/programming/haskell/pseudocodeCompiler/Main.hs",
		"/home/felix/programming/haskell/pseudocodeCompiler/Instructions.hs",
		"/home/felix/programming/haskell/pseudocodeCompiler/F.hs",
		"/home/felix/programming/haskell/pseudocodeCompiler/Ast.hs",
		"/home/felix/programming/haskell/pseudocodeCompiler/source.psc",
		"/home/felix/programming/haskell/pseudocodeCompiler/AstTransform.hs",
		"/home/felix/programming/haskell/pseudocodeCompiler/PseudocodeParser.y",
		"/home/felix/programming/haskell/pseudocodeCompiler/source2.psc",
		"/home/felix/programming/haskell/pseudocodeCompiler/Lexer.x",
		"/home/felix/programming/haskell/pseudocodeCompiler/Tokens.hs",
		"/home/felix/programming/haskell/pseudocodeCompiler/PseudocodeParser.info",
		"/home/felix/documents/sem2/übungen/diskreteStrukturen/weihnachtsserie/weihnachtsserie.tex",
		"/home/felix/programming/haskell/pseudocodeCompiler/Lexer.hs",
		"/home/felix/programming/haskell/pseudocodeCompiler/PseudocodeParser.hs",
		"/home/felix/programming/haskell/pseudocodeCompiler/Parse.hs",
		"/home/felix/programming/haskell/dnf.hs",
		"/home/felix/programming/haskell/pseudocodeCompiler/parser.y",
		"/home/felix/programming/haskell/pseudocodeCompiler/ast.hs",
		"/home/felix/programming/haskell/pseudocodeCompiler/learning.hs",
		"/home/felix/programming/cpp/pseudocodeInterpreter/src/function.c",
		"/home/felix/programming/cpp/pseudocodeInterpreter/src/main.c",
		"/home/felix/programming/cpp/pseudocodeInterpreter/src/class.c",
		"/home/felix/programming/cpp/pseudocodeInterpreter/src/variableString.c",
		"/home/felix/programming/cpp/pseudocodeInterpreter/src/variable.c",
		"/home/felix/programming/cpp/pseudocodeInterpreter/src/array.c",
		"/home/felix/programming/cpp/pseudocodeInterpreter/src/boolean.c",
		"/home/felix/programming/cpp/pseudocodeInterpreter/src/execStack.c",
		"/home/felix/programming/cpp/pseudocodeInterpreter/src/nameStore.c",
		"/home/felix/programming/cpp/pseudocodeInterpreter/src/operation.c",
		"/home/felix/programming/cpp/pseudocodeInterpreter/src/object.c",
		"/home/felix/programming/cpp/pseudocodeInterpreter/program.psc",
		"/home/felix/programming/cpp/pseudocodeInterpreter/include/constants.h",
		"/home/felix/programming/cpp/pseudocodeInterpreter/pseudocodeInterpreter.sublime-project",
		"/home/felix/programming/cpp/pseudocodeInterpreter/makefile",
		"/srv/http/Taijiseite/v15/pages/main.php",
		"/home/felix/programming/cpp/pseudocodeInterpreter/documentation/languageDefinition.txt",
		"/home/felix/programming/cpp/pseudocodeInterpreter/src/localVariableContainer.c",
		"/home/felix/programming/java/proguebung/sem2/7/PalindromeCounter.java",
		"/home/felix/programming/java/proguebung/sem2/7/Container.java",
		"/home/felix/programming/java/proguebung/sem2/7/StringCounter.java",
		"/srv/http/Taijiseite/v15/pages/termine.php",
		"/srv/http/Taijiseite/v15/methods/register.php",
		"/home/felix/documents/sem2/übungen/rechnerstrukturen/3/loes.tex",
		"/home/felix/documents/sem2/übungen/rechnerstrukturen/3/sub/a1.tex",
		"/home/felix/documents/sem2/übungen/rechnerstrukturen/3/Rechnerstrukturen/a1_2.tex",
		"/home/felix/documents/sem2/übungen/rechnerstrukturen/3/Rechnerstrukturen/loes.tex",
		"/home/felix/documents/sem2/übungen/rechnerstrukturen/3/Rechnerstrukturen/u3.tex",
		"/srv/http/legalq/src/snippets/file.hxtml",
		"/home/felix/test/weihnachtsserie.tex",
		"/home/felix/test/file.tex",
		"/srv/http/legalq/src/hxtml/Index.hxtml",
		"/srv/http/legalq/build/lib/Main.class.php",
		"/srv/http/legalq/src/hx/HxtmlLoader.hx",
		"/srv/http/Taijiseite/v15/pages/newsletter.php",
		"/srv/http/Taijiseite/v15/scripts/connectToDatabase.php",
		"/srv/http/Taijiseite/v15/.htaccess",
		"/srv/http/Taijiseite/v15/templates/navigation.php",
		"/home/felix/.config/sublime-text-3/Packages/User/LaTeXTools.sublime-settings",
		"/home/felix/.config/sublime-text-3/Packages/LaTeXTools/LaTeXTools.sublime-settings",
		"/home/felix/programming/cpp/dnfmaker/src/main.cpp",
		"/home/felix/programming/cpp/dnfmaker/src/optree.cpp",
		"/home/felix/programming/cpp/dnfmaker/include/optree.h",
		"/home/felix/programming/haskell/normalf.hs",
		"/srv/http/legalq/src/Main.hx",
		"/srv/http/legalq/build.hxml",
		"/srv/http/legalq/src/hx/Mime.hx",
		"/srv/http/legalq/htacess",
		"/srv/http/legalq/build/.htacess",
		"/srv/http/legalq/src/.gitignore",
		"/srv/http/legalq/src/hxtml/sub/p2.hxtml",
		"/srv/http/legalq/src/hxtml/p2.hxtml",
		"/srv/http/legalq/build/.htaccess",
		"/srv/http/legalq/.htaccess",
		"/srv/http/legalq/src/.htaccess",
		"/srv/http/legalq/makefile",
		"/srv/http/legalq/src/Index.hx",
		"/srv/http/legalq/src/Page2.hx",
		"/srv/http/legalq/src/untitled.hxtml",
		"/srv/http/legalq/src/page2.hx",
		"/home/felix/test/out",
		"/srv/http/legalq/src/file.hxtml",
		"/home/felix/.config/sublime-text-3/Packages/Haxe/Snippets/class.sublime-snippet",
		"/home/felix/.config/sublime-text-3/Packages/Haxe/Snippets/function-(f).sublime-snippet",
		"/home/felix/.config/sublime-text-3/Packages/All Autocomplete/all_views_completions.py",
		"/home/felix/.config/sublime-text-3/Packages/All Autocomplete/package-metadata.json",
		"/home/felix/.config/sublime-text-3/Packages/All Autocomplete/README.md",
		"/srv/http/legalq/out/lib/Index.class.php",
		"/srv/http/legalq/out/lib/makefile",
		"/srv/http/legalq/Index.hx",
		"/srv/http/Taijiseite/v15/pages/books.php",
		"/home/felix/programming/java/proguebung/sem2/5/Pedestrian.java",
		"/home/felix/programming/java/proguebung/sem2/5/Car.java",
		"/home/felix/programming/java/proguebung/sem2/5/Test.java",
		"/home/felix/programming/java/proguebung/sem2/5/Motorbike.java",
		"/home/felix/programming/java/proguebung/sem2/5/Bicycle.java",
		"/home/felix/programming/java/proguebung/sem2/5/TwoWheeler.java",
		"/home/felix/programming/java/proguebung/sem2/5/Colour.java",
		"/home/felix/programming/java/proguebung/sem2/5/Traffic.java",
		"/home/felix/programming/java/proguebung/sem2/5/Motorbike",
		"/home/felix/programming/java/proguebung/sem2/5/colour.java",
		"/home/felix/programming/java/proguebung/sem2/4/Dateien/UniMember.java",
		"/home/felix/programming/java/proguebung/sem2/4/Dateien/Test.java",
		"/home/felix/programming/java/proguebung/sem2/4/Dateien/Student.java",
		"/home/felix/programming/java/proguebung/sem2/4/Dateien/Staff.java",
		"/home/felix/programming/java/proguebung/sem2/4/Dateien/Assistant.java",
		"/home/felix/programming/java/proguebung/sem2/4/Dateien/Kommentar.txt",
		"/home/felix/programming/java/proguebung/sem2/4/Dateien/Professor.java",
		"/srv/http/perlenseite/forms/addBead.php",
		"/home/felix/programming/java/proguebung/sem2/3/Dateien/Elem.java",
		"/home/felix/programming/java/proguebung/sem2/3/Dateien/Queue3.java",
		"/home/felix/programming/java/proguebung/sem2/3/Dateien/inputs",
		"/home/felix/programming/java/proguebung/sem2/3/Dateien/Queue2.java",
		"/home/felix/Downloads/scintilla/lexlib/OptionSet.h",
		"/home/felix/Downloads/scintilla/lexers/LexCPP.cxx",
		"/home/felix/Downloads/scintilla/include/SciLexer.h",
		"/home/felix/programming/java/proguebung/sem2/3/*.java",
		"/home/felix/documents/sem2/übungen/diskreteStrukturen/3/u3.tex",
		"/home/felix/Downloads/scintilla/scripts/FileGenerator.py",
		"/home/felix/Downloads/scintilla/lexers/LexJSON.cxx",
		"/home/felix/other/exploit/exploit.c",
		"/home/felix/other/exploit/shell_injection.c",
		"/home/felix/other/exploit/killtest.c"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 97.0,
		"where_history":
		[
			"<current file>",
			"<current file>,/home/felix/Downloads/scintilla",
			"<current file>",
			"<current file>,<open files>",
			"<current file>",
			"<current file>,<open folders>",
			"<current file>",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"normaliseLoops",
			"flattenRepeat",
			"transformFor",
			"','",
			"ArrayList",
			"\")\n",
			"getHxtmlString",
			"mailadress",
			"/\".",
			"lexer.cpp.",
			"lexer.",
			"multiline",
			"'\\'",
			"\\}$",
			"$row['ColorCode']",
			"$row['TypeName']",
			"2047",
			"):",
			"addSomething",
			"ma op ",
			"matr",
			"[].",
			"\t ",
			"lenghGoal",
			"totalWordNumber",
			"ever",
			"Wordtree",
			"new",
			");\n",
			"unlinkNode",
			"length",
			"ö",
			");\n",
			"char",
			"short",
			");\n",
			"-4\n-4",
			"-4\n",
			";\n",
			" ",
			"00f"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"normaliseStatements",
			"normaliseLoops",
			"LinkedList",
			"processHaxeTags",
			"$colorcode",
			"$typename",
			"form",
			"addOption",
			"lengthGoal",
			"lenghGoal",
			"deleteNode",
			"slength",
			"oe",
			"int",
			"char",
			"",
			"111"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/Main.hs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1777,
						"regions":
						{
						},
						"selection":
						[
							[
								623,
								623
							]
						],
						"settings":
						{
							"syntax": "Packages/Haskell/Haskell.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/ToBytecode.hs",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 2148,
						"regions":
						{
						},
						"selection":
						[
							[
								1365,
								1365
							]
						],
						"settings":
						{
							"syntax": "Packages/Haskell/Haskell.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/AstTransform.hs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6819,
						"regions":
						{
						},
						"selection":
						[
							[
								3218,
								3218
							]
						],
						"settings":
						{
							"syntax": "Packages/Haskell/Haskell.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 678.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 3,
					"file": "src/Ast.hs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1844,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Haskell/Haskell.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 32.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.609994086339,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": false,
	"output.exec":
	{
		"height": 98.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.hex_viewer_inspector":
	{
		"height": 0.0
	},
	"output.latextools":
	{
		"height": 92.0
	},
	"pinned_build_system": "",
	"project": "pseudocodeCompiler.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/programming/cpp/pseudocodeInterpreter/pseudocodeInterpreter.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 172.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 400.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 225.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
